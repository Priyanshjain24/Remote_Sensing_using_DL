{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28185,"status":"ok","timestamp":1658500542691,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"},"user_tz":-330},"id":"ocvifrMPkg06","outputId":"c54a7c26-803b-4908-f3c7-86ddec5dc7ee"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: patchify in /usr/local/lib/python3.7/dist-packages (0.2.3)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.7/dist-packages (from patchify) (1.21.6)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: segmentation_models in /usr/local/lib/python3.7/dist-packages (1.0.1)\n","Requirement already satisfied: efficientnet==1.0.0 in /usr/local/lib/python3.7/dist-packages (from segmentation_models) (1.0.0)\n","Requirement already satisfied: keras-applications<=1.0.8,>=1.0.7 in /usr/local/lib/python3.7/dist-packages (from segmentation_models) (1.0.8)\n","Requirement already satisfied: image-classifiers==1.0.0 in /usr/local/lib/python3.7/dist-packages (from segmentation_models) (1.0.0)\n","Requirement already satisfied: scikit-image in /usr/local/lib/python3.7/dist-packages (from efficientnet==1.0.0->segmentation_models) (0.18.3)\n","Requirement already satisfied: numpy>=1.9.1 in /usr/local/lib/python3.7/dist-packages (from keras-applications<=1.0.8,>=1.0.7->segmentation_models) (1.21.6)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.7/dist-packages (from keras-applications<=1.0.8,>=1.0.7->segmentation_models) (3.1.0)\n","Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py->keras-applications<=1.0.8,>=1.0.7->segmentation_models) (1.5.2)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (2021.11.2)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (1.3.0)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (2.6.3)\n","Requirement already satisfied: matplotlib!=3.0.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (3.2.2)\n","Requirement already satisfied: pillow!=7.1.0,!=7.1.1,>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (7.1.2)\n","Requirement already satisfied: scipy>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (1.7.3)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->efficientnet==1.0.0->segmentation_models) (2.4.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (2.8.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (1.4.4)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (3.0.9)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (4.1.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib!=3.0.0,>=2.0.0->scikit-image->efficientnet==1.0.0->segmentation_models) (1.15.0)\n","Segmentation Models: using `keras` framework.\n"]}],"source":["#installing and import various libraries to be used\n","\n","!pip install patchify\n","!pip install segmentation_models\n","\n","import os\n","import cv2\n","import numpy as np\n","from matplotlib import pyplot as plt\n","from patchify import patchify\n","from PIL import Image\n","import segmentation_models as sm\n","from tensorflow.keras.metrics import MeanIoU\n","from keras.models import Model\n","from keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D, concatenate, Conv2DTranspose, BatchNormalization, Dropout, Lambda\n","from keras import backend as K\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from tensorflow.keras.utils import to_categorical\n","from sklearn.model_selection import train_test_split\n","from keras.models import load_model\n","from keras.metrics import MeanIoU"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":26386,"status":"ok","timestamp":1658500569067,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"},"user_tz":-330},"id":"ybDLtUKri2Ft"},"outputs":[],"source":["scaler = MinMaxScaler()\n","root_directory = '/content/drive/MyDrive/Coding Assignment/DATASET_REMOTE_SATELLITE'\n","patch_size = 256\n","\n","#Read the images from the respective directory\n","image_dataset = []  \n","\n","for path, subdirs, files in os.walk(root_directory):\n","    \n","    subdirs.sort()\n","    dirname = path.split(os.path.sep)[-1]\n","    \n","    if dirname == 'images':           \n","        images = os.listdir(path)              \n","        images.sort()\n","        \n","        #Pre-process the images\n","        for i, image_name in enumerate(images):  \n","            \n","            if image_name.endswith(\".jpg\"):         \n","                image = cv2.imread(path+\"/\"+image_name, 1)            \n","                \n","                #All images are of different sizes : crop them to nearest integer and divide all images into patches of 256*256*3\n","                SIZE_X = (image.shape[1]//patch_size)*patch_size \n","                SIZE_Y = (image.shape[0]//patch_size)*patch_size \n","                image = Image.fromarray(image)\n","                image = image.crop((0 ,0, SIZE_X, SIZE_Y))\n","                image = np.array(image)             \n","       \n","                #Extract patches from each image\n","                patches_img = patchify(image, (patch_size, patch_size, 3), step=patch_size)\n","        \n","                for i in range(patches_img.shape[0]):\n","                    for j in range(patches_img.shape[1]):\n","                        \n","                        single_patch_img = patches_img[i,j,:,:] \n","                        single_patch_img = scaler.fit_transform(single_patch_img.reshape(-1, single_patch_img.shape[-1])).reshape(single_patch_img.shape)\n","                        single_patch_img = single_patch_img[0]                               \n","                        image_dataset.append(single_patch_img)\n","                \n","image_dataset = np.array(image_dataset)\n","                \n","\n","#Then Patchify Mask : create patches of the mask images \n","\n","mask_dataset = []  \n","\n","for path, subdirs, files in os.walk(root_directory):\n","    \n","    subdirs.sort()\n","    dirname = path.split(os.path.sep)[-1]\n","    \n","    if dirname == 'masks':   \n","        masks = os.listdir(path)  \n","        masks.sort()\n","        \n","        for i, mask_name in enumerate(masks):  \n","            \n","            if mask_name.endswith(\".png\"):   \n","                mask = cv2.imread(path+\"/\"+mask_name, 1) \n","                mask = cv2.cvtColor(mask,cv2.COLOR_BGR2RGB)\n","                \n","                SIZE_X = (mask.shape[1]//patch_size)*patch_size \n","                SIZE_Y = (mask.shape[0]//patch_size)*patch_size \n","                mask = Image.fromarray(mask)\n","                mask = mask.crop((0 ,0, SIZE_X, SIZE_Y)) \n","                mask = np.array(mask)             \n","                \n","                patches_mask = patchify(mask, (patch_size, patch_size, 3), step=patch_size)  #Step=256 for 256 patches means no overlap\n","        \n","                for i in range(patches_mask.shape[0]):\n","                    for j in range(patches_mask.shape[1]):\n","                        \n","                        single_patch_mask = patches_mask[i,j,:,:]\n","                        single_patch_mask = single_patch_mask[0]                             \n","                        mask_dataset.append(single_patch_mask) \n"," \n","mask_dataset =  np.array(mask_dataset)\n"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1658500569068,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"},"user_tz":-330},"id":"icLLOfzXi2l7"},"outputs":[],"source":["#Convert the HEX value to RGB value\n","Building = '#3C1098'.lstrip('#')\n","Building = np.array(tuple(int(Building[i:i+2], 16) for i in (0, 2, 4))) \n","\n","Land = '#8429F6'.lstrip('#')\n","Land = np.array(tuple(int(Land[i:i+2], 16) for i in (0, 2, 4))) \n","\n","Road = '#6EC1E4'.lstrip('#') \n","Road = np.array(tuple(int(Road[i:i+2], 16) for i in (0, 2, 4))) \n","\n","Vegetation =  'FEDD3A'.lstrip('#') \n","Vegetation = np.array(tuple(int(Vegetation[i:i+2], 16) for i in (0, 2, 4))) \n","\n","Water = 'E2A929'.lstrip('#') \n","Water = np.array(tuple(int(Water[i:i+2], 16) for i in (0, 2, 4))) \n","\n","Unlabeled = '#9B9B9B'.lstrip('#') \n","Unlabeled = np.array(tuple(int(Unlabeled[i:i+2], 16) for i in (0, 2, 4))) \n"]},{"cell_type":"code","source":["label = single_patch_mask\n","\n","def rgb_to_2D_label(label):\n","\n","    label_seg = np.zeros(label.shape,dtype=np.uint8)\n","    label_seg [np.all(label == Building,axis=-1)] = 0\n","    label_seg [np.all(label==Land,axis=-1)] = 1\n","    label_seg [np.all(label==Road,axis=-1)] = 2\n","    label_seg [np.all(label==Vegetation,axis=-1)] = 3\n","    label_seg [np.all(label==Water,axis=-1)] = 4\n","    label_seg [np.all(label==Unlabeled,axis=-1)] = 5\n","    \n","    label_seg = label_seg[:,:,0] \n","    \n","    return label_seg\n","\n","labels = []\n","for i in range(len(mask_dataset)):\n","    label = rgb_to_2D_label(mask_dataset[i])\n","    labels.append(label)    \n","\n","labels = np.array(labels)   \n","labels = np.expand_dims(labels, axis=3)\n"],"metadata":{"id":"Gu-scGlydg8a","executionInfo":{"status":"ok","timestamp":1658500601126,"user_tz":-330,"elapsed":32062,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":12586,"status":"ok","timestamp":1658500613698,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"},"user_tz":-330},"id":"43Ewl4_ZDKJR"},"outputs":[],"source":["#Create a deep learning model\n","n_classes = len(np.unique(labels))\n","labels_cat = to_categorical(labels, num_classes=n_classes)\n","X_train, X_test, y_train, y_test = train_test_split(image_dataset, labels_cat, test_size = 0.10, random_state = 42)\n","\n","\n","def jacard_coef(y_true, y_pred):\n","    y_true_f = K.flatten(y_true)\n","    y_pred_f = K.flatten(y_pred)\n","    intersection = K.sum(y_true_f * y_pred_f)\n","    return (intersection + 1.0) / (K.sum(y_true_f) + K.sum(y_pred_f) - intersection + 1.0)\n","\n","\n","#Create a Semantic Segmentation Network\n","def multi_unet_model(n_classes=4, IMG_HEIGHT=256, IMG_WIDTH=256, IMG_CHANNELS=1):\n","\n","    inputs = Input((IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS))\n","    s = inputs\n","\n","    c1 = Conv2D(16, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(s)\n","    c1 = Dropout(0.2)(c1)  \n","    c1 = Conv2D(16, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c1)\n","    p1 = MaxPooling2D((2, 2))(c1)\n","    \n","    c2 = Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(p1)\n","    c2 = Dropout(0.2)(c2) \n","    c2 = Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c2)\n","    p2 = MaxPooling2D((2, 2))(c2)\n","     \n","    c3 = Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(p2)\n","    c3 = Dropout(0.2)(c3)\n","    c3 = Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c3)\n","    p3 = MaxPooling2D((2, 2))(c3)\n","     \n","    c4 = Conv2D(128, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(p3)\n","    c4 = Dropout(0.2)(c4)\n","    c4 = Conv2D(128, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c4)\n","    p4 = MaxPooling2D(pool_size=(2, 2))(c4)\n","     \n","    c5 = Conv2D(256, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(p4)\n","    c5 = Dropout(0.3)(c5)\n","    c5 = Conv2D(256, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c5)\n","    \n","\n","    u6 = Conv2DTranspose(128, (2, 2), strides=(2, 2), padding='same')(c5)\n","    u6 = concatenate([u6, c4])\n","    c6 = Conv2D(128, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(u6)\n","    c6 = Dropout(0.2)(c6)\n","    c6 = Conv2D(128, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c6)\n","     \n","    u7 = Conv2DTranspose(64, (2, 2), strides=(2, 2), padding='same')(c6)\n","    u7 = concatenate([u7, c3])\n","    c7 = Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(u7)\n","    c7 = Dropout(0.2)(c7)\n","    c7 = Conv2D(64, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c7)\n","     \n","    u8 = Conv2DTranspose(32, (2, 2), strides=(2, 2), padding='same')(c7)\n","    u8 = concatenate([u8, c2])\n","    c8 = Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(u8)\n","    c8 = Dropout(0.2)(c8)  \n","    c8 = Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c8)\n","     \n","    u9 = Conv2DTranspose(16, (2, 2), strides=(2, 2), padding='same')(c8)\n","    u9 = concatenate([u9, c1], axis=3)\n","    c9 = Conv2D(16, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(u9)\n","    c9 = Dropout(0.2)(c9)  \n","    c9 = Conv2D(16, (3, 3), activation='relu', kernel_initializer='he_normal', padding='same')(c9)\n","     \n","    outputs = Conv2D(n_classes, (1, 1), activation='softmax')(c9)\n","     \n","    model = Model(inputs=[inputs], outputs=[outputs])\n","    \n","    return model\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YwLNn1zJjT0y","outputId":"994b3d87-a612-48d2-a652-1c4b1b5fce99","executionInfo":{"status":"ok","timestamp":1658512761557,"user_tz":-330,"elapsed":12147871,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, 256, 256, 3  0           []                               \n","                                )]                                                                \n","                                                                                                  \n"," conv2d (Conv2D)                (None, 256, 256, 16  448         ['input_1[0][0]']                \n","                                )                                                                 \n","                                                                                                  \n"," dropout (Dropout)              (None, 256, 256, 16  0           ['conv2d[0][0]']                 \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_1 (Conv2D)              (None, 256, 256, 16  2320        ['dropout[0][0]']                \n","                                )                                                                 \n","                                                                                                  \n"," max_pooling2d (MaxPooling2D)   (None, 128, 128, 16  0           ['conv2d_1[0][0]']               \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_2 (Conv2D)              (None, 128, 128, 32  4640        ['max_pooling2d[0][0]']          \n","                                )                                                                 \n","                                                                                                  \n"," dropout_1 (Dropout)            (None, 128, 128, 32  0           ['conv2d_2[0][0]']               \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_3 (Conv2D)              (None, 128, 128, 32  9248        ['dropout_1[0][0]']              \n","                                )                                                                 \n","                                                                                                  \n"," max_pooling2d_1 (MaxPooling2D)  (None, 64, 64, 32)  0           ['conv2d_3[0][0]']               \n","                                                                                                  \n"," conv2d_4 (Conv2D)              (None, 64, 64, 64)   18496       ['max_pooling2d_1[0][0]']        \n","                                                                                                  \n"," dropout_2 (Dropout)            (None, 64, 64, 64)   0           ['conv2d_4[0][0]']               \n","                                                                                                  \n"," conv2d_5 (Conv2D)              (None, 64, 64, 64)   36928       ['dropout_2[0][0]']              \n","                                                                                                  \n"," max_pooling2d_2 (MaxPooling2D)  (None, 32, 32, 64)  0           ['conv2d_5[0][0]']               \n","                                                                                                  \n"," conv2d_6 (Conv2D)              (None, 32, 32, 128)  73856       ['max_pooling2d_2[0][0]']        \n","                                                                                                  \n"," dropout_3 (Dropout)            (None, 32, 32, 128)  0           ['conv2d_6[0][0]']               \n","                                                                                                  \n"," conv2d_7 (Conv2D)              (None, 32, 32, 128)  147584      ['dropout_3[0][0]']              \n","                                                                                                  \n"," max_pooling2d_3 (MaxPooling2D)  (None, 16, 16, 128)  0          ['conv2d_7[0][0]']               \n","                                                                                                  \n"," conv2d_8 (Conv2D)              (None, 16, 16, 256)  295168      ['max_pooling2d_3[0][0]']        \n","                                                                                                  \n"," dropout_4 (Dropout)            (None, 16, 16, 256)  0           ['conv2d_8[0][0]']               \n","                                                                                                  \n"," conv2d_9 (Conv2D)              (None, 16, 16, 256)  590080      ['dropout_4[0][0]']              \n","                                                                                                  \n"," conv2d_transpose (Conv2DTransp  (None, 32, 32, 128)  131200     ['conv2d_9[0][0]']               \n"," ose)                                                                                             \n","                                                                                                  \n"," concatenate (Concatenate)      (None, 32, 32, 256)  0           ['conv2d_transpose[0][0]',       \n","                                                                  'conv2d_7[0][0]']               \n","                                                                                                  \n"," conv2d_10 (Conv2D)             (None, 32, 32, 128)  295040      ['concatenate[0][0]']            \n","                                                                                                  \n"," dropout_5 (Dropout)            (None, 32, 32, 128)  0           ['conv2d_10[0][0]']              \n","                                                                                                  \n"," conv2d_11 (Conv2D)             (None, 32, 32, 128)  147584      ['dropout_5[0][0]']              \n","                                                                                                  \n"," conv2d_transpose_1 (Conv2DTran  (None, 64, 64, 64)  32832       ['conv2d_11[0][0]']              \n"," spose)                                                                                           \n","                                                                                                  \n"," concatenate_1 (Concatenate)    (None, 64, 64, 128)  0           ['conv2d_transpose_1[0][0]',     \n","                                                                  'conv2d_5[0][0]']               \n","                                                                                                  \n"," conv2d_12 (Conv2D)             (None, 64, 64, 64)   73792       ['concatenate_1[0][0]']          \n","                                                                                                  \n"," dropout_6 (Dropout)            (None, 64, 64, 64)   0           ['conv2d_12[0][0]']              \n","                                                                                                  \n"," conv2d_13 (Conv2D)             (None, 64, 64, 64)   36928       ['dropout_6[0][0]']              \n","                                                                                                  \n"," conv2d_transpose_2 (Conv2DTran  (None, 128, 128, 32  8224       ['conv2d_13[0][0]']              \n"," spose)                         )                                                                 \n","                                                                                                  \n"," concatenate_2 (Concatenate)    (None, 128, 128, 64  0           ['conv2d_transpose_2[0][0]',     \n","                                )                                 'conv2d_3[0][0]']               \n","                                                                                                  \n"," conv2d_14 (Conv2D)             (None, 128, 128, 32  18464       ['concatenate_2[0][0]']          \n","                                )                                                                 \n","                                                                                                  \n"," dropout_7 (Dropout)            (None, 128, 128, 32  0           ['conv2d_14[0][0]']              \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_15 (Conv2D)             (None, 128, 128, 32  9248        ['dropout_7[0][0]']              \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_transpose_3 (Conv2DTran  (None, 256, 256, 16  2064       ['conv2d_15[0][0]']              \n"," spose)                         )                                                                 \n","                                                                                                  \n"," concatenate_3 (Concatenate)    (None, 256, 256, 32  0           ['conv2d_transpose_3[0][0]',     \n","                                )                                 'conv2d_1[0][0]']               \n","                                                                                                  \n"," conv2d_16 (Conv2D)             (None, 256, 256, 16  4624        ['concatenate_3[0][0]']          \n","                                )                                                                 \n","                                                                                                  \n"," dropout_8 (Dropout)            (None, 256, 256, 16  0           ['conv2d_16[0][0]']              \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_17 (Conv2D)             (None, 256, 256, 16  2320        ['dropout_8[0][0]']              \n","                                )                                                                 \n","                                                                                                  \n"," conv2d_18 (Conv2D)             (None, 256, 256, 6)  102         ['conv2d_17[0][0]']              \n","                                                                                                  \n","==================================================================================================\n","Total params: 1,941,190\n","Trainable params: 1,941,190\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n","Epoch 1/15\n","74/74 [==============================] - 790s 11s/step - loss: 1.0004 - accuracy: 0.5067 - jacard_coef: 0.2402 - val_loss: 0.9949 - val_accuracy: 0.6656 - val_jacard_coef: 0.4252\n","Epoch 2/15\n","74/74 [==============================] - 788s 11s/step - loss: 0.9653 - accuracy: 0.6855 - jacard_coef: 0.4137 - val_loss: 0.9680 - val_accuracy: 0.7012 - val_jacard_coef: 0.4830\n","Epoch 3/15\n","74/74 [==============================] - 801s 11s/step - loss: 0.9518 - accuracy: 0.7312 - jacard_coef: 0.4827 - val_loss: 0.9555 - val_accuracy: 0.7449 - val_jacard_coef: 0.5130\n","Epoch 4/15\n","74/74 [==============================] - 817s 11s/step - loss: 0.9483 - accuracy: 0.7389 - jacard_coef: 0.4980 - val_loss: 0.9594 - val_accuracy: 0.7365 - val_jacard_coef: 0.5271\n","Epoch 5/15\n","74/74 [==============================] - 807s 11s/step - loss: 0.9414 - accuracy: 0.7656 - jacard_coef: 0.5322 - val_loss: 0.9567 - val_accuracy: 0.7561 - val_jacard_coef: 0.5693\n","Epoch 6/15\n","74/74 [==============================] - 792s 11s/step - loss: 0.9343 - accuracy: 0.7872 - jacard_coef: 0.5749 - val_loss: 0.9401 - val_accuracy: 0.7890 - val_jacard_coef: 0.6066\n","Epoch 7/15\n","74/74 [==============================] - 810s 11s/step - loss: 0.9306 - accuracy: 0.7974 - jacard_coef: 0.5945 - val_loss: 0.9364 - val_accuracy: 0.7948 - val_jacard_coef: 0.6163\n","Epoch 8/15\n","74/74 [==============================] - 802s 11s/step - loss: 0.9277 - accuracy: 0.8046 - jacard_coef: 0.6074 - val_loss: 0.9338 - val_accuracy: 0.7985 - val_jacard_coef: 0.6087\n","Epoch 9/15\n","74/74 [==============================] - 801s 11s/step - loss: 0.9263 - accuracy: 0.8079 - jacard_coef: 0.6131 - val_loss: 0.9271 - val_accuracy: 0.8162 - val_jacard_coef: 0.6295\n","Epoch 10/15\n","74/74 [==============================] - 813s 11s/step - loss: 0.9224 - accuracy: 0.8176 - jacard_coef: 0.6296 - val_loss: 0.9237 - val_accuracy: 0.8228 - val_jacard_coef: 0.6487\n","Epoch 11/15\n","74/74 [==============================] - 805s 11s/step - loss: 0.9206 - accuracy: 0.8216 - jacard_coef: 0.6367 - val_loss: 0.9228 - val_accuracy: 0.8244 - val_jacard_coef: 0.6533\n","Epoch 12/15\n","74/74 [==============================] - 804s 11s/step - loss: 0.9190 - accuracy: 0.8256 - jacard_coef: 0.6422 - val_loss: 0.9255 - val_accuracy: 0.8174 - val_jacard_coef: 0.6495\n","Epoch 13/15\n","74/74 [==============================] - 818s 11s/step - loss: 0.9173 - accuracy: 0.8297 - jacard_coef: 0.6489 - val_loss: 0.9260 - val_accuracy: 0.8155 - val_jacard_coef: 0.6524\n","Epoch 14/15\n","74/74 [==============================] - 830s 11s/step - loss: 0.9174 - accuracy: 0.8294 - jacard_coef: 0.6482 - val_loss: 0.9258 - val_accuracy: 0.8164 - val_jacard_coef: 0.6514\n","Epoch 15/15\n","74/74 [==============================] - 814s 11s/step - loss: 0.9155 - accuracy: 0.8344 - jacard_coef: 0.6564 - val_loss: 0.9240 - val_accuracy: 0.8210 - val_jacard_coef: 0.6569\n"]}],"source":["#Train A Semantic Segmentation Network\n","weights = [0.1666, 0.1666, 0.1666, 0.1666, 0.1666, 0.1666]\n","dice_loss = sm.losses.DiceLoss(class_weights=weights) \n","focal_loss = sm.losses.CategoricalFocalLoss()\n","total_loss = dice_loss + (1 * focal_loss) \n","\n","\n","IMG_HEIGHT = X_train.shape[1]\n","IMG_WIDTH  = X_train.shape[2]\n","IMG_CHANNELS = X_train.shape[3]\n","\n","\n","metrics=['accuracy', jacard_coef]\n","\n","\n","def get_model():\n","    return multi_unet_model(n_classes=n_classes, IMG_HEIGHT=IMG_HEIGHT, IMG_WIDTH=IMG_WIDTH, IMG_CHANNELS=IMG_CHANNELS)\n","\n","model = get_model()\n","model.compile(optimizer='adam', loss=total_loss, metrics=metrics)\n","model.summary()\n","\n","\n","history1 = model.fit(X_train, y_train, \n","                    batch_size = 16, \n","                    verbose=1, \n","                    epochs=100,       #might not run on colab upto 100\n","                    validation_data=(X_test, y_test), \n","                    shuffle=False)\n","\n","model.save('models/U-net.hdf5')\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"yqNkQSumjfwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658512784297,"user_tz":-330,"elapsed":22746,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"}},"outputId":"ededdb98-9c6f-45ae-cbba-8a0045b508c6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mean IoU = 0.51020247\n"]}],"source":["#Evaluate the Results of Semantic Segmentation\n","model = load_model('/content/models/U-net.hdf5', custom_objects = { 'dice_loss_plus_1focal_loss': total_loss,'jacard_coef': jacard_coef })\n","\n","y_pred=model.predict(X_test)\n","y_pred_argmax=np.argmax(y_pred, axis=3)\n","y_test_argmax=np.argmax(y_test, axis=3)\n","\n","n_classes = 6\n","IOU_keras = MeanIoU(num_classes=n_classes)  \n","IOU_keras.update_state(y_test_argmax, y_pred_argmax)\n","print(\"Mean IoU =\", IOU_keras.result().numpy())"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"Ljo8wX5_jgMb","colab":{"base_uri":"https://localhost:8080/","height":261},"executionInfo":{"status":"ok","timestamp":1658513811046,"user_tz":-330,"elapsed":2040,"user":{"displayName":"Priyansh Jain","userId":"12919148660681172086"}},"outputId":"432d592b-a2c8-4e55-f556-a6410d1b66d2"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 3 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["#Inspect the Results of Semantic Segmentation\n","import random\n","test_img_number = random.randint(0, len(X_test))\n","test_img = X_test[test_img_number]\n","ground_truth=y_test_argmax[test_img_number]\n","test_img_input=np.expand_dims(test_img, 0)\n","prediction = (model.predict(test_img_input))\n","predicted_img=np.argmax(prediction, axis=3)[0,:,:]\n","\n","\n","plt.figure(figsize=(12, 8))\n","plt.subplot(231)\n","plt.title('Testing Image')\n","plt.imshow(test_img)\n","plt.subplot(232)\n","plt.title('Testing Label')\n","plt.imshow(ground_truth)\n","plt.subplot(233)\n","plt.title('Prediction on test image')\n","plt.imshow(predicted_img)\n","plt.show()"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Task 3","provenance":[],"mount_file_id":"1mPjEf-JPl15h4oPZ5IOg2mHwdSxqWZOR","authorship_tag":"ABX9TyM5nd8Dk67Feo180nS+FyG4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}